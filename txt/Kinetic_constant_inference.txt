import pandas as pd
import numpy as np

def kinetic_constant_inference(path, reaction):
    stoich_reactants = {reactant.getSpecies(): reactant.getStoichiometry() for reactant in reaction.getListOfReactants()}

    df = pd.read_csv(path)

    # Calcolo Δ prodotto / (coeff * Δt), usando il prodotto "C"
    product = "C"
    nu = stoich_products[product]
    delta_C = df[product].diff().iloc[1:]
    delta_t = df["time"].diff().iloc[1:]
    v = delta_C / (nu * delta_t)

    # Calcolo del termine di legge d'azione di massa: [A]^1 * [B]^2
    rate_expr = np.ones(len(df))
    for specie, coeff in stoich_reactants.items():
        rate_expr *= df[specie] ** coeff
    rate_expr = rate_expr.iloc[1:]  # allineato con v

    # Fitting: v ≈ k * rate_expr
    k_opt, *_ = np.linalg.lstsq(rate_expr.values.reshape(-1, 1), v.values, rcond=None)

    print(f"Costante cinetica stimata: k ≈ {k_opt[0]:.5f}")


